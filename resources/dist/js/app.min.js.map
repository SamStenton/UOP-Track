{"version":3,"sources":["webpack:///webpack/bootstrap 2e79b1b8a95f45ea27a3","webpack:///./resources/src/js/app.js","webpack:///./resources/src/js/pages/PageDispatcher.js","webpack:///./resources/src/js/pages/CreateModule.js","webpack:///./resources/src/js/pages/Page.js","webpack:///./resources/src/js/classes/Form.js","webpack:///./resources/src/js/classes/FormErrors.js","webpack:///./resources/src/js/elements/ModuleItem.js"],"names":["PageDispatcher","require","CreateModulePage","constructor","pages","registerPages","loadPage","page","canFulfill","execute","module","exports","Page","Form","ModuleItemGen","createModule","selector","submissions","form","name","moduleItemFactory","getByDataAttr","document","querySelectorAll","length","getByName","addEventListener","event","target","value","updateDisplay","getByID","addSubmission","submitForm","preventDefault","post","item","weight","grade","addItem","generate","inject","push","clearInputs","innerHTML","undefined","console","log","id","getByClass","clearInput","inputs","input","axios","FormErrors","data","originalData","errors","setOriginalData","field","addData","key","property","reset","clear","url","submit","requestType","Promise","resolve","reject","then","response","onSuccess","catch","error","onFail","alert","message","record","has","hasOwnProperty","any","Object","keys","get","ModuleItem","itemContainer","container","items","Array","generated","string","trim"],"mappings":"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","file":"app.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2e79b1b8a95f45ea27a3","// Page Dispatcher\n// Runs on every page and loads \n// a matching Javascript Page if it exists\nvar PageDispatcher = new (require('./pages/PageDispatcher.js'))\n\n\n\n// WEBPACK FOOTER //\n// ./resources/src/js/app.js","var CreateModulePage = require('./CreateModule.js');\n\nclass PageDispatcher {\n    constructor() {\n        this.pages = this.registerPages();\n        this.loadPage()\n    }\n\n    /**\n     * Pages to be checked should be placed here\n     *\n     * @return     {Object}  Pages Classes\n     */\n    registerPages() {\n        return {\n            CreateModulePage: new CreateModulePage()\n        }\n    }\n\n    /**\n     * Loops through the registered pages \n     * checking if each can fulfill the\n     * current page. If so the execute\n     * method is run on the returned\n     * Page\n     */\n    loadPage() {\n        for(let page in this.pages) {\n            if (this.pages[page].canFulfill()) {\n                this.pages[page].execute()\n                break;\n            }\n        }\n    }\n}\n\nmodule.exports = PageDispatcher\n\n\n// WEBPACK FOOTER //\n// ./resources/src/js/pages/PageDispatcher.js","var Page = require('./Page.js')\nvar Form = require('../classes/Form.js')\nvar ModuleItemGen = require('../elements/ModuleItem.js')\n\nclass createModule extends Page{\n    constructor() {\n        super()\n        this.selector = \"create-module\"\n        this.submissions = []\n        this.form = new Form({\n            name: '',\n            submissions: []\n        });\n        this.moduleItemFactory = new ModuleItemGen(this.getByDataAttr('item=\"items\"'))\n    }\n\n    /**\n     * Checks for a unique element on a page to \n     *\n     * @return     {boolean}  True if able to fulfill, False otherwise.\n     */\n    canFulfill() {\n        return document.querySelectorAll(`[data-page=\"${this.selector}\"]`).length > 0;\n    }\n\n    /**\n     * Entry Method for the current page. Envoked via PageDispatcher.js\n     * \n     */\n    execute() {\n        this.getByName('module_name').addEventListener('keyup', (event) => {\n            this.form.name = event.target.value\n            this.updateDisplay('module_name', event)\n        })\n        this.getByID('addSubmission').addEventListener('click', (event) => this.addSubmission(event))\n        this.getByID('submitForm').addEventListener('click', (event) => this.submitForm(event))\n    }\n\n    /**\n     * Submits form to the server\n     *\n     * @param      {event}  event   Submit event\n     */\n    submitForm(event) {\n        event.preventDefault();\n        this.form.submissions = this.submissions;\n        this.form.post('/api/module/create')\n    }\n\n    /**\n     * Adds a submission to the form object \n     *\n     * @param      {Event}  event   add event\n     */\n    addSubmission(event) {\n        event.preventDefault();\n        let item = {\n            name: this.getByName('submission_name').value,\n            weight: this.getByName('submission_weight').value,\n            grade: this.getByName('submission_grade').value\n        }\n\n        this.moduleItemFactory.addItem(item)\n        this.moduleItemFactory.generate();\n        this.moduleItemFactory.inject();\n\n        this.submissions.push(item)\n        this.clearInputs(['submission_name', 'submission_weight', 'submission_grade'])\n    }\n\n    /**\n     * Ouputs the users input in the the corrisponding Module Display\n     *\n     * @param      {String}  selector  Parent HTML selector\n     * @param      {Event}  event     The event\n     */\n    updateDisplay(selector, event) {\n        this.getByDataAttr(`item=\"${selector}\"`).innerHTML = event.target.value\n    }\n}\n\nmodule.exports = createModule;\n\n\n// WEBPACK FOOTER //\n// ./resources/src/js/pages/CreateModule.js","var Form = require('../classes/Form.js')\nvar form = new Form();\n\nclass Page {\n    constructor() {\n        this.selector = undefined\n    }\n\n    /**\n     * This is basically and abstract class so shouldn't\n     * have the ability to fulfill any requests\n     *\n     * @return     {boolean}  True if able to fulfill, False otherwise.\n     */\n    canFulfill() {\n        return false;\n    }\n\n    /**\n     * Entry into page. Should be overridden\n     */\n    execute() {console.log('execute() method does not exist. Please create it')}\n\n    /**\n     * Gets an element by its ID\n     *\n     * @param      {string}  id      ID of element\n     * @return     {HTMLElement}  Selected element \n     */\n    getByID(id) {\n        return document.querySelectorAll(`[id=\"${id}\"]`)[0]\n    }\n\n    /**\n     * Gets an element by its name\n     * This would usually be \n     * an input\n     *\n     * @param      {string}  name    Input Name\n     * @return     {HtmlElement}  Selected element\n     */\n    getByName(name) {\n        return document.querySelectorAll(`[name=\"${name}\"]`)[0]\n    }\n\n    /**\n     * Selects an element by its class name\n     *\n     * @param      {String}  name    Class name \n     * @return     {HMTLElement}  Selected element\n     */ \n    getByClass(name) {\n        return document.querySelectorAll(`[class=\"${name}\"]`)[0]\n    }\n\n    /**\n     * Selects element by its Data attribute\n     *\n     * @param      {String}  name    Data attribute\n     * @return     {HTMLElement}  Selected element\n     */\n    getByDataAttr(name) {\n        return document.querySelectorAll(`[data-${name}`)[0]\n    }\n\n    /**\n     * Clears an inputs value\n     *\n     * @param      {String}  name    Inputs name\n     */\n    clearInput(name) {\n        this.getByName(name).value = \"\"\n    }\n\n    /**\n     * Clears multiple input values\n     *\n     * @param      {Array}  inputs  The inputs\n     */\n    clearInputs(inputs) {\n        for(let input in inputs) {\n            this.clearInput(inputs[input])\n        }\n    }\n}\n\nmodule.exports = Page;\n\n\n// WEBPACK FOOTER //\n// ./resources/src/js/pages/Page.js","var axios = require('axios')\nvar FormErrors = require('./FormErrors.js')\nclass Form {\n    /**\n     * Create a new Form instance.\n     *\n     * @param {object} data\n     */\n    constructor(data) {\n        this.originalData = data;\n        this.errors = new FormErrors();\n    }\n\n    setOriginalData(data) {\n        this.originalData = data;\n\n        for (let field in data) {\n            this[field] = data[field];\n        }\n    }\n\n    addData(key, value) {\n        this.originalData[key] = value;\n\n        for (let field in this.originalData) {\n            this[field] = this.originalData[field];\n        }\n    }\n\n    /**\n     * Fetch all relevant data for the form.\n     */\n    data() {\n        let data = {};\n\n        for (let property in this.originalData) {\n            data[property] = this[property];\n        }\n\n        return data;\n    }\n\n\n    /**\n     * Reset the form fields.\n     */\n    reset() {\n        for (let field in this.originalData) {\n            this[field] = '';\n        }\n\n        this.errors.clear();\n    }\n\n\n    /**\n     * Send a POST request to the given URL.\n     * .\n     * @param {string} url\n     */\n    post(url) {\n        return this.submit('post', url);\n    }\n\n    /**\n     * Submit the form.\n     *\n     * @param {string} requestType\n     * @param {string} url\n     */\n    submit(requestType, url) {\n        return new Promise((resolve, reject) => {\n            axios[requestType](url, this.data())\n                .then(response => {\n                    this.onSuccess(response.data);\n\n                    resolve(response.data);\n                })\n                .catch(error => {\n                    this.onFail(error.response.data);\n\n                    reject(error.response.data);\n                });\n        });\n    }\n\n\n    /**\n     * Handle a successful form submission.\n     *\n     * @param {object} data\n     */\n    onSuccess(data) {\n        alert(data.message); // temporary\n\n        this.reset();\n    }\n\n\n    /**\n     * Handle a failed form submission.\n     *\n     * @param {object} errors\n     */\n    onFail(errors) {\n        this.errors.record(errors);\n    }\n}\n\nmodule.exports = Form;\n\n\n// WEBPACK FOOTER //\n// ./resources/src/js/classes/Form.js","class FormErrors {\n    /**\n     * Create a new Errors instance.\n     */\n    constructor() {\n        this.errors = {};\n    }\n\n\n    /**\n     * Determine if an errors exists for the given field.\n     *\n     * @param {string} field\n     */\n    has(field) {\n        return this.errors.hasOwnProperty(field);\n    }\n\n\n    /**\n     * Determine if we have any errors.\n     */\n    any() {\n        return Object.keys(this.errors).length > 0;\n    }\n\n\n    /**\n     * Retrieve the error message for a field.\n     *\n     * @param {string} field\n     */\n    get(field) {\n        if (this.errors[field]) {\n            return this.errors[field][0];\n        }\n    }\n\n\n    /**\n     * Record the new errors.\n     *\n     * @param {object} errors\n     */\n    record(errors) {\n        this.errors = errors;\n    }\n\n\n    /**\n     * Clear one or all error fields.\n     *\n     * @param {string|null} field\n     */\n    clear(field) {\n        if (field) {\n            delete this.errors[field];\n\n            return;\n        }\n\n        this.errors = {};\n    }\n}\n\nmodule.exports = FormErrors\n\n\n// WEBPACK FOOTER //\n// ./resources/src/js/classes/FormErrors.js","class ModuleItem {\n    constructor(itemContainer) {\n        this.container = itemContainer\n        this.items = new Array()\n        this.generated = \"\"\n        this.container.innerHTML = \"\"\n    }\n\n    /**\n     * Adds an item to the list of items\n     *\n     * @param      {Object}  item    The item\n     */\n    addItem(item) {\n        this.items.push(item)\n    }\n\n    /**\n     * Generates an Module Submission html elements\n     * using the template given from items passed\n     * to the addItem method\n     */\n    generate() {\n        this.generated = \"\"\n        for (let item in this.items) {\n            item = this.items[item]\n            let grade = (item.grade != \"\") ? `${item.grade}%` : 'Pending'\n            let string = `\n                <div class=\"item\">\n                  <div class=\"type\">?</div>\n                  <div class=\"details\">\n                    <h4>${item.name}</h4>\n                    <div class=\"weighting\">Weighting: ${item.weight}%</div>\n                  </div>\n                  <div class=\"grade pending\">${grade}</div>\n                </div>`\n\n            this.generated += string.trim()\n        }\n\n    }\n\n    /**\n     * Inject the generated html into the given\n     * HTML parent\n     */\n    inject() {\n        this.container.innerHTML = this.generated\n    }\n}\n\nmodule.exports = ModuleItem\n\n\n\n\n// WEBPACK FOOTER //\n// ./resources/src/js/elements/ModuleItem.js"],"sourceRoot":""}